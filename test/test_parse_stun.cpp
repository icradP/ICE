#include <arpa/inet.h>
#include <netinet/in.h>
#include <sys/socket.h>

#include <cstdint>
#include <iostream>
#include <string>
#include <vector>

#include "stun/Stun.h"


using namespace std;
using namespace stun;

void on_message(StunMessage& msg) {
  // find attributetype and cout value
  cout << "Message type: " << MessageType2str(msg.getMessageType()) << endl;
  auto attrs = msg.getAttributes();
  for (StunAttribute& attr : attrs) {
    cout << "Attribute type: " << AttributeType2str(attr.type) << endl;
    cout << "Attribute length: " << attr.length << endl;
    cout << "Attribute value: "
         << AttributeValue2str(parseAttribute2Variant(attr)) << endl;
    if (attr.type == AttributeType::XOR_MAPPED_ADDRESS ||
        attr.type == AttributeType::XOR_PEER_ADDRESS ||
        attr.type == AttributeType::XOR_RELAYED_ADDRESS) {
      auto xorAddr = getXorAddr(attr);
      std::cout << "Attribute value(XOR): " << xorAddr.first << ":"
                << xorAddr.second << std::endl;
    }
    cout << "Attribute value (HEX): "
         << dumphex(attr.value.data(), attr.value.size()) << endl;
    cout << endl;
  }
}

bool process_msg() {
  std::vector<uint8_t> buffer_bind_res = {
      0x01, 0x01, 0x00, 0x40, 0x21, 0x12, 0xa4, 0x42, 0x4f, 0x78, 0x75, 0x34,
      0x57, 0x5a, 0x64, 0x69, 0x52, 0x4c, 0x71, 0x5a, 0x00, 0x20, 0x00, 0x08,
      0x00, 0x01, 0xc7, 0xe2, 0x96, 0xfc, 0x51, 0x38, 0x00, 0x01, 0x00, 0x08,
      0x00, 0x01, 0xe6, 0xf0, 0xb7, 0xee, 0xf5, 0x7a, 0x80, 0x2b, 0x00, 0x08,
      0x00, 0x01, 0x2e, 0xfe, 0x77, 0x17, 0xd4, 0x60, 0x80, 0x22, 0x00, 0x18,
      0x43, 0x6f, 0x74, 0x75, 0x72, 0x6e, 0x2d, 0x34, 0x2e, 0x35, 0x2e, 0x32,
      0x20, 0x27, 0x64, 0x61, 0x6e, 0x20, 0x45, 0x69, 0x64, 0x65, 0x72, 0x27};
  std::vector<uint8_t> buffer_alloc = {
      0x00, 0x03, 0x00, 0x08, 0x21, 0x12, 0xa4, 0x42, 0x46, 0x30,
      0x4b, 0x6f, 0x75, 0x4c, 0x6b, 0x71, 0x67, 0x67, 0x5a, 0x64,
      0x00, 0x19, 0x00, 0x04, 0x11, 0x00, 0x00, 0x00};
  std::vector<uint8_t> buffer = {0x00, 0x01, 0x00, 0x00, 0x21, 0x12, 0xa4,
                                 0x42, 0x4a, 0x45, 0x38, 0x62, 0x4c, 0x6a,
                                 0x48, 0x75, 0x45, 0x68, 0x31, 0x30};
  std::vector<uint8_t> buffer_2 = {0x00, 0x03, 0x00, 0x08, 0x21, 0x12, 0xa4,
                                   0x42, 0x58, 0x57, 0x78, 0x4f, 0x2f, 0x62,
                                   0x2f, 0x65, 0x4f, 0x34, 0x69, 0x75, 0x00,
                                   0x19, 0x00, 0x04, 0x11, 0x00, 0x00, 0x00};
  std::vector<uint8_t> buffer_3 = {
      0x01, 0x01, 0x00, 0x40, 0x21, 0x12, 0xa4, 0x42, 0x4a, 0x45, 0x38, 0x62,
      0x4c, 0x6a, 0x48, 0x75, 0x45, 0x68, 0x31, 0x30, 0x00, 0x20, 0x00, 0x08,
      0x00, 0x01, 0xf3, 0xa6, 0x96, 0xfc, 0x51, 0x38, 0x00, 0x01, 0x00, 0x08,
      0x00, 0x01, 0xd2, 0xb4, 0xb7, 0xee, 0xf5, 0x7a, 0x80, 0x2b, 0x00, 0x08,
      0x00, 0x01, 0x2e, 0xfe, 0x77, 0x17, 0xd4, 0x60, 0x80, 0x22, 0x00, 0x18,
      0x43, 0x6f, 0x74, 0x75, 0x72, 0x6e, 0x2d, 0x34, 0x2e, 0x35, 0x2e, 0x32,
      0x20, 0x27, 0x64, 0x61, 0x6e, 0x20, 0x45, 0x69, 0x64, 0x65, 0x72, 0x27};
  std::vector<uint8_t> buffer_4 = {
      0x01, 0x13, 0x00, 0x54, 0x21, 0x12, 0xa4, 0x42, 0x58, 0x57, 0x78, 0x4f,
      0x2f, 0x62, 0x2f, 0x65, 0x4f, 0x34, 0x69, 0x75, 0x00, 0x09, 0x00, 0x10,
      0x00, 0x00, 0x04, 0x01, 0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
      0x69, 0x7a, 0x65, 0x64, 0x00, 0x15, 0x00, 0x10, 0x31, 0x33, 0x63, 0x64,
      0x35, 0x39, 0x61, 0x35, 0x37, 0x32, 0x37, 0x64, 0x31, 0x34, 0x63, 0x66,
      0x00, 0x14, 0x00, 0x09, 0x69, 0x63, 0x72, 0x61, 0x64, 0x2e, 0x6c, 0x74,
      0x64, 0x00, 0x00, 0x00, 0x80, 0x22, 0x00, 0x18, 0x43, 0x6f, 0x74, 0x75,
      0x72, 0x6e, 0x2d, 0x34, 0x2e, 0x35, 0x2e, 0x32, 0x20, 0x27, 0x64, 0x61,
      0x6e, 0x20, 0x45, 0x69, 0x64, 0x65, 0x72, 0x27};
  std::vector<uint8_t> buffer_5 = {
      0x00, 0x03, 0x00, 0x50, 0x21, 0x12, 0xa4, 0x42, 0x7a, 0x73, 0x42, 0x71,
      0x4b, 0x48, 0x5a, 0x75, 0x5a, 0x2b, 0x41, 0x6f, 0x00, 0x19, 0x00, 0x04,
      0x11, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x69, 0x63, 0x72, 0x61,
      0x64, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x09, 0x69, 0x63, 0x72, 0x61,
      0x64, 0x2e, 0x6c, 0x74, 0x64, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x10,
      0x31, 0x33, 0x63, 0x64, 0x35, 0x39, 0x61, 0x35, 0x37, 0x32, 0x37, 0x64,
      0x31, 0x34, 0x63, 0x66, 0x00, 0x08, 0x00, 0x14, 0x4d, 0x13, 0x25, 0x35,
      0x5f, 0xbc, 0x2a, 0xa4, 0x37, 0x4f, 0x1f, 0xae, 0x20, 0xeb, 0xc3, 0x29,
      0xa5, 0x10, 0xbd, 0x51};

  std::vector<uint8_t> buffer_6 = {
      0x01, 0x03, 0x00, 0x54, 0x21, 0x12, 0xa4, 0x42, 0x7a, 0x73, 0x42, 0x71,
      0x4b, 0x48, 0x5a, 0x75, 0x5a, 0x2b, 0x41, 0x6f, 0x00, 0x16, 0x00, 0x08,
      0x00, 0x01, 0xd0, 0x17, 0x56, 0x05, 0x70, 0x22, 0x00, 0x20, 0x00, 0x08,
      0x00, 0x01, 0xf3, 0xa6, 0x96, 0xfc, 0x51, 0x38, 0x00, 0x0d, 0x00, 0x04,
      0x00, 0x00, 0x02, 0x58, 0x80, 0x22, 0x00, 0x18, 0x43, 0x6f, 0x74, 0x75,
      0x72, 0x6e, 0x2d, 0x34, 0x2e, 0x35, 0x2e, 0x32, 0x20, 0x27, 0x64, 0x61,
      0x6e, 0x20, 0x45, 0x69, 0x64, 0x65, 0x72, 0x27, 0x00, 0x08, 0x00, 0x14,
      0x21, 0xec, 0x02, 0xe0, 0xb8, 0x6f, 0xf7, 0x40, 0x17, 0x56, 0xfe, 0x74,
      0xfe, 0x69, 0xdc, 0x05, 0x89, 0xe7, 0xff, 0xcd};
  std::vector<uint8_t> buffer_7 = {0x00, 0x01, 0x00, 0x00, 0x21, 0x12, 0xa4,
                                   0x42, 0x54, 0x41, 0x6d, 0x69, 0x74, 0x65,
                                   0x67, 0x4f, 0x71, 0x30, 0x52, 0x79};
  std::vector<uint8_t> buffer_8 = {
      0x01, 0x01, 0x00, 0x40, 0x21, 0x12, 0xa4, 0x42, 0x54, 0x41, 0x6d, 0x69,
      0x74, 0x65, 0x67, 0x4f, 0x71, 0x30, 0x52, 0x79, 0x00, 0x20, 0x00, 0x08,
      0x00, 0x01, 0xf3, 0xa6, 0x96, 0xfc, 0x51, 0x38, 0x00, 0x01, 0x00, 0x08,
      0x00, 0x01, 0xd2, 0xb4, 0xb7, 0xee, 0xf5, 0x7a, 0x80, 0x2b, 0x00, 0x08,
      0x00, 0x01, 0x2e, 0xfe, 0x77, 0x17, 0xd4, 0x60, 0x80, 0x22, 0x00, 0x18,
      0x43, 0x6f, 0x74, 0x75, 0x72, 0x6e, 0x2d, 0x34, 0x2e, 0x35, 0x2e, 0x32,
      0x20, 0x27, 0x64, 0x61, 0x6e, 0x20, 0x45, 0x69, 0x64, 0x65, 0x72, 0x27};
  std::vector<uint8_t> buffer_9 = {0x00, 0x01, 0x00, 0x00, 0x21, 0x12, 0xa4,
                                   0x42, 0x6b, 0x65, 0x36, 0x2b, 0x4d, 0x30,
                                   0x62, 0x69, 0x53, 0x75, 0x77, 0x4c};

  std::vector<uint8_t> buffer_10 = {
      0x01, 0x01, 0x00, 0x40, 0x21, 0x12, 0xa4, 0x42, 0x6b, 0x65, 0x36, 0x2b,
      0x4d, 0x30, 0x62, 0x69, 0x53, 0x75, 0x77, 0x4c, 0x00, 0x20, 0x00, 0x08,
      0x00, 0x01, 0xf3, 0xa6, 0x96, 0xfc, 0x51, 0x38, 0x00, 0x01, 0x00, 0x08,
      0x00, 0x01, 0xd2, 0xb4, 0xb7, 0xee, 0xf5, 0x7a, 0x80, 0x2b, 0x00, 0x08,
      0x00, 0x01, 0x2e, 0xfe, 0x77, 0x17, 0xd4, 0x60, 0x80, 0x22, 0x00, 0x18,
      0x43, 0x6f, 0x74, 0x75, 0x72, 0x6e, 0x2d, 0x34, 0x2e, 0x35, 0x2e, 0x32,
      0x20, 0x27, 0x64, 0x61, 0x6e, 0x20, 0x45, 0x69, 0x64, 0x65, 0x72, 0x27};

  std::vector<uint8_t> buffer_11 = {0x00, 0x01, 0x00, 0x00, 0x21, 0x12, 0xa4,
                                    0x42, 0x35, 0x71, 0x77, 0x73, 0x79, 0x56,
                                    0x79, 0x42, 0x64, 0x66, 0x4f, 0x4c};

  std::vector<uint8_t> buffer_12 = {
      0x01, 0x01, 0x00, 0x40, 0x21, 0x12, 0xa4, 0x42, 0x35, 0x71, 0x77, 0x73,
      0x79, 0x56, 0x79, 0x42, 0x64, 0x66, 0x4f, 0x4c, 0x00, 0x20, 0x00, 0x08,
      0x00, 0x01, 0xf3, 0xa6, 0x96, 0xfc, 0x51, 0x38, 0x00, 0x01, 0x00, 0x08,
      0x00, 0x01, 0xd2, 0xb4, 0xb7, 0xee, 0xf5, 0x7a, 0x80, 0x2b, 0x00, 0x08,
      0x00, 0x01, 0x2e, 0xfe, 0x77, 0x17, 0xd4, 0x60, 0x80, 0x22, 0x00, 0x18,
      0x43, 0x6f, 0x74, 0x75, 0x72, 0x6e, 0x2d, 0x34, 0x2e, 0x35, 0x2e, 0x32,
      0x20, 0x27, 0x64, 0x61, 0x6e, 0x20, 0x45, 0x69, 0x64, 0x65, 0x72, 0x27};
  std::vector<uint8_t> buffer_13 = {
      0x00, 0x04, 0x00, 0x50, 0x21, 0x12, 0xa4, 0x42, 0x53, 0x74, 0x6e, 0x33,
      0x52, 0x35, 0x4d, 0x4b, 0x57, 0x50, 0x66, 0x67, 0x00, 0x0d, 0x00, 0x04,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x69, 0x63, 0x72, 0x61,
      0x64, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x09, 0x69, 0x63, 0x72, 0x61,
      0x64, 0x2e, 0x6c, 0x74, 0x64, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x10,
      0x31, 0x33, 0x63, 0x64, 0x35, 0x39, 0x61, 0x35, 0x37, 0x32, 0x37, 0x64,
      0x31, 0x34, 0x63, 0x66, 0x00, 0x08, 0x00, 0x14, 0x86, 0xaa, 0xea, 0x41,
      0x66, 0xa8, 0x52, 0xa8, 0x41, 0x06, 0x6b, 0xd6, 0x6f, 0x5c, 0x4b, 0xb9,
      0x79, 0x55, 0xd1, 0xfb};
  std::vector<uint8_t> buffer_14 = {
      0x01, 0x04, 0x00, 0x3c, 0x21, 0x12, 0xa4, 0x42, 0x53, 0x74, 0x6e, 0x33,
      0x52, 0x35, 0x4d, 0x4b, 0x57, 0x50, 0x66, 0x67, 0x00, 0x0d, 0x00, 0x04,
      0x00, 0x00, 0x00, 0x00, 0x80, 0x22, 0x00, 0x18, 0x43, 0x6f, 0x74, 0x75,
      0x72, 0x6e, 0x2d, 0x34, 0x2e, 0x35, 0x2e, 0x32, 0x20, 0x27, 0x64, 0x61,
      0x6e, 0x20, 0x45, 0x69, 0x64, 0x65, 0x72, 0x27, 0x00, 0x08, 0x00, 0x14,
      0x31, 0x29, 0x35, 0x3e, 0xc5, 0x0b, 0x8d, 0x6d, 0xeb, 0x5c, 0x1e, 0x53,
      0x3a, 0xbb, 0x00, 0x32, 0x61, 0x3d, 0x51, 0xdb};

  std::vector<std::vector<uint8_t>> buffers = {
      buffer,    buffer_2,  buffer_3,  buffer_4, buffer_5,
      buffer_6,  buffer_7,  buffer_8,  buffer_9, buffer_10,
      buffer_11, buffer_12, buffer_13, buffer_14};
  for (const auto& buf : buffers) {
    try {
      auto msg = makeStunMessage(buf.data(), buf.size());
      cout << "MAKE STUN MESSAGE" << endl;
      on_message(msg);
      cout << endl;
    } catch (const std::exception& e) {
      std::cerr << "Error processing buffer: " << e.what() << std::endl;
      auto msg = makeStunMessage(buf.data(), buf.size());
      cout << "error :\n" << dumphex(buf.data(), buf.size()) << endl;
    }
  }
  return true;
}

int main(int argc, char** argv) {
  
  return process_msg();;
}